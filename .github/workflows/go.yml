# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Cache Go Modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('risque-server/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Dependencies
      run: go mod download
      working-directory: risque-server

    - name: Build
      run: go build -o risque-server ./cmd/risque-server
      working-directory: risque-server

    - name: Test
      run: go test -v ./...
      working-directory: risque-server

    - name: Upload Binary
      uses: actions/upload-artifact@v3
      with:
        name: risque-server
        path: risque-server/risque-server

    - name: Deploy to GitHub Pages
      if: github.event_name == 'push'
      run: |
        mkdir gh-pages
        mv risque-server/risque-server gh-pages/
        cd gh-pages
        git init
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"
        git add .
        git commit -m "Deploy Go binary"
        git push --force "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" master:gh-pages
